$(document).ready(() => {
    const currencySelect = $('##{rawJS cid}')

    let transferMethodSelect = $('##{rawJS tid}')
    let defaultOption = $([
        '<option disabled selected value="">',
        '#{rawJS(messageRender MsgFormLabelOptionSelectDepositTransferMethod)}',
        '</option>'
    ].join())
    transferMethodSelect.prepend(defaultOption)

    const transferMethods = $('##{rawJS tid} option')

    const checkFeedback = () => {
        const form = $('##{rawJS formId}')
        const feedback = $('.form-group .invalid-feedback', form)
        feedback.each((i, f) => {
            $(f).parent().find('.form-control').addClass('is-invalid')
        })
    }

    const updatePayamentMethods = (currency, selectFirst = false) => {
        transferMethods.each((i, op) => {
            $(op).attr('disabled', 'disabled')
            $(op).removeAttr('selected')
            $(op).hide()
        })
        $('##{rawJS tid} option[value^="' + currency + '"]').each((i, op) => {
            $(op).removeAttr('disabled')
            $(op).show()
            if (i == 0 && selectFirst) {
                $(op).attr('selected', '')
            }
        })
        if (!selectFirst) {
            defaultOption.attr('selected', 'selected')
        }
    }

    currencySelect.change(() => {
        selectedCurrency = currencySelect.val()
        switch (selectedCurrency) {
            case 'rub':
                updatePayamentMethods(selectedCurrency)
                break
            case 'pzm':
                updatePayamentMethods(selectedCurrency, true)
                break
            case 'ouro':
                updatePayamentMethods(selectedCurrency, true)
                break
            default: break
        }
    })

    checkFeedback()
    updatePayamentMethods(currencySelect.val())
})