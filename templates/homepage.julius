const init = () => {
    // const cbr_tree = $(
    //     $('#cbr')
    //         .text()
    //         .replace(/<img.*?>/gm, '')
    //         .replace(/<script.*?<\/script>/gm, '')
    //         .replace(/<style.*?<\/style>/gm, ''))
    // const btca_tree = $(
    //     $('#btca')
    //         .text()
    //         .replace(/<img.*?>/gm, '')
    //         .replace(/<script.*?<\/script>/gm, '')
    //         .replace(/<style.*?<\/style>/gm, ''))
    // $('#rateData').remove()
    // const cbr_data = $('#group_mainind .name_exchange.opened .w_data_wrap', cbr_tree).first()
    // const cbr_nodes = getTextNodesIn(cbr_data)
    // const cbr_rate = parseFloat($(cbr_nodes[cbr_nodes.length - 1]).text().replace(',', '.'))
    // const btca_data = $('#pair_PZM_USD .markets-col-price', btca_tree).text()
    // const btca_rate = parseFloat(btca_data)
    // const rateInput = $('##{rawJS ratioId}')
    // rateInput.attr('placeholder', (cbr_rate * btca_rate).toFixed(2))
    const orderCols = $('.order-col')
    const switchTab = (e, pair, tabs) => {
        e.preventDefault()
        tabs.forEach(t => $(t).removeClass('active').addClass('text-light'))
        $(pair).addClass('active').removeClass('text-light')
        const id = $(pair)
            .attr('id')
            .slice(0, -('-pair').length)
            .replace('-', '_')
        const flip_id = id.split('_').reverse().join('_')
        const els = orderCols.find('> *')
        els.each((_, x) => {
            const el = $(x)
            const pair = el.data('pair')
            if (pair == id || pair == flip_id) {
                el.removeClass('hide')
                el.addClass('show')
            } else {
                el.removeClass('show')
                el.addClass('hide')
            }
        })
    }
    const pzmRurTab = $('#pzm-rur-pair')
    const pzmOurTab = $('#pzm-our-pair')
    const ourRurTab = $('#our-rur-pair')
    const tabs = [pzmRurTab, pzmOurTab, ourRurTab]
    pzmRurTab.click((e) => { switchTab(e, pzmRurTab, tabs) })
    pzmOurTab.click((e) => { switchTab(e, pzmOurTab, tabs) })
    ourRurTab.click((e) => { switchTab(e, ourRurTab, tabs) })
    // const pzmRurFeeInfo = $('#pzm-rur-fee-info')
    // pzmRurTab.click(() => {
    //     pzmRurTab.parent().toggleClass('expanded')
    //     pzmRurFeeInfo.collapse('toggle')
    // })
}

const getTextNodesIn = (n, includeWhitespaceNodes) => {
    const node = n[0]
    var textNodes = [], nonWhitespaceMatcher = /\S/
    const getTextNodes = (node) => {
        if (node.nodeType == 3) {
            if (includeWhitespaceNodes || nonWhitespaceMatcher.test(node.nodeValue)) {
                textNodes.push(node)
            }
        } else {
            for (var i = 0, len = node.childNodes.length; i < len; ++i) {
                getTextNodes(node.childNodes[i])
            }
        }
    }
    getTextNodes(node)
    return textNodes
}

$(document).ready(init)
